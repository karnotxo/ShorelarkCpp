name: Build & Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Windows MSVC",
              os: windows-latest,
              cc: "cl",
              cxx: "cl",
              environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            }
          - {
              name: "Ubuntu GCC",
              os: ubuntu-latest,
              cc: "gcc-12",
              cxx: "g++-12",
            }
          - {
              name: "macOS Clang",
              os: macos-latest,
              cc: "clang",
              cxx: "clang++",
            }

    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan==2.*

      - name: Configure Conan
        run: |
          conan profile detect --force

      - name: Cache Conan packages
        uses: actions/cache@v3
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('**/conanfile.py') }}
          restore-keys: |
            ${{ runner.os }}-conan-

      - name: Install Dependencies (Ubuntu)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev xorg-dev

      - name: CMake Configure
        run: |
          conan install . --output-folder=build --build=missing
          cmake --preset conan-release -DENABLE_TESTING=ON

      - name: CMake Build
        run: cmake --build --preset conan-release

      - name: Run Tests
        working-directory: build
        run: ctest --preset conan-release --output-on-failure

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.config.name }}
          path: build/Testing/Temporary/LastTest.log
