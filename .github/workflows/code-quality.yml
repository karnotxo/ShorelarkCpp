name: Code Quality

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  clang-tidy:
    name: Clang-Tidy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-tidy-14 libgl1-mesa-dev xorg-dev

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan==2.*

      - name: Configure Conan
        run: |
          conan profile detect --force

      - name: Generate Compilation Database
        run: |
          conan install . --output-folder=build --build=missing
          cmake --preset conan-release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run Clang-Tidy
        run: |
          find libs apps -iname *.cpp -o -iname *.hpp | xargs clang-tidy-14 -p build

  cppcheck:
    name: Cppcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Cppcheck
        run: sudo apt-get install -y cppcheck

      - name: Run Cppcheck
        run: |
          cppcheck --enable=all --std=c++17 --suppress=missingInclude \
            --error-exitcode=1 --inline-suppr \
            -I include libs apps

  sanitizers:
    name: Sanitizer Checks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sanitizer: [address, undefined, thread]
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev xorg-dev

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan==2.*

      - name: Configure Conan
        run: |
          conan profile detect --force

      - name: Build and Test with ${{ matrix.sanitizer }}
        env:
          CXXFLAGS: "-fsanitize=${{ matrix.sanitizer }} -fno-omit-frame-pointer"
          LDFLAGS: "-fsanitize=${{ matrix.sanitizer }}"
        run: |
          conan install . --output-folder=build --build=missing
          cmake --preset conan-debug -DENABLE_TESTING=ON
          cmake --build --preset conan-debug
          cd build && ctest --preset conan-debug --output-on-failure

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y lcov libgl1-mesa-dev xorg-dev

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Conan
        run: |
          python -m pip install --upgrade pip
          pip install conan==2.*

      - name: Configure Conan
        run: |
          conan profile detect --force

      - name: Generate Coverage Report
        run: |
          conan install . --output-folder=build --build=missing
          cmake --preset conan-debug -DENABLE_TESTING=ON -DENABLE_COVERAGE=ON
          cmake --build --preset conan-debug
          cd build && ctest --preset conan-debug
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --output-file coverage.info

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
        with:
          files: ./build/coverage.info
          fail_ci_if_error: true
